[{"content":"What\u0026rsquo;s a Docker Container? Before we dive into setting up DeepSeek-R1, let me explain what a Docker container is. Imagine you have a toy that works perfectly on your birthday but gets broken if you move it to another room. A Docker container is like a magic box that keeps your AI model (the toy) in perfect condition wherever you take it, whether it\u0026rsquo;s running as a background task, on a web server, or even in the cloud.\nDocker containers encapsulate everything required to run an application: the code, dependencies, and environment settings. This ensures consistency across different machines, which is super important for AI models that rely on precise configurations.\nSetting Up The Environment Step 1: Install Ubuntu on Windows (If You Haven\u0026rsquo;t Already) If you\u0026rsquo;re using Windows, the easiest way to get an Ubuntu environment is through the Microsoft Store. Here\u0026rsquo;s how:\nOpen the Microsoft Store and search for Ubuntu. Click Get and let it install. Once installed, open Ubuntu from the Start menu and follow the setup instructions. Update the system: sudo apt update \u0026amp;\u0026amp; sudo apt upgrade Now, you have an Ubuntu terminal running on Windows!\nStep 2: Install Docker (If You Haven\u0026rsquo;t Already) First, let\u0026rsquo;s check if you have Docker installed. Open a terminal and run:\ndocker --version If that returns a version number, congrats! If not, install Docker:\nsudo apt update \u0026amp;\u0026amp; sudo apt install docker.io -y sudo systemctl enable --now docker Step 3: Prerequisites for NVIDIA GPU Install NVIDIA Container Toolkit:\nConfiguring the production repository: curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | sudo gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg \\ \u0026amp;\u0026amp; curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \\ sed \u0026#39;s#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g\u0026#39; | \\ sudo tee /etc/apt/sources.list.d/nvidia-container-toolkit.list Update the package list: sudo apt-get update Install the NVIDIA Container Toolkit: sudo apt-get install -y nvidia-container-toolkit Running Ollama Inside Docker Run these commands(P.S. shoutout to NetworkChuck):\ndocker run -d \\ --gpus all \\ -v ollama:/root/.ollama \\ -p 11434:11434 \\ --security-opt=no-new-privileges \\ --cap-drop=ALL \\ --cap-add=SYS_NICE \\ --memory=8g \\ --memory-swap=8g \\ --cpus=4 \\ --read-only \\ --name ollama \\ ollama/ollama Running DeepSeek-R1 Locally Time to bring DeepSeek-R1 to life locally and containerized:\ndocker exec -it ollama ollama run deepseek-r1 or you can run other versions of deepseek-r1 just by typing in the version at the end after a colon(:)\ndocker exec -it ollama ollama run deepseek-r1:7b After this, play around with the AI, if you wanna exit just type:\n/bye Starting Deepseek-R1 To Start Deepseek-R1 from next time go to Ubuntu and type:\ndocker start ollama this will start ollama docker container; then type:\ndocker exec -it ollama ollama run deepseek-r1:7b ","permalink":"http://localhost:1313/blog/running-deepseek-r1-on-docker-container-on-ubuntu/","summary":"\u003ch1 id=\"whats-a-docker-container\"\u003eWhat\u0026rsquo;s a Docker Container?\u003c/h1\u003e\n\u003cp\u003eBefore we dive into setting up DeepSeek-R1, let me explain what a Docker container is. Imagine you have a toy that works perfectly on your birthday but gets broken if you move it to another room. A Docker container is like a magic box that keeps your AI model (the toy) in perfect condition wherever you take it, whether it\u0026rsquo;s running as a background task, on a web server, or even in the cloud.\u003c/p\u003e","title":"Dive into AI Fun: Running DeepSeek-R1 on a Docker Container on Ubuntu"},{"content":"What\u0026rsquo;s the buzz about AdGuard Home? Imagine AdGuard Home as your personal internet guardian. This versatile tool blocks ads, trackers, and other online nuisances across all devices connected to your network. Whether you\u0026rsquo;re browsing on your phone, tablet, or computer, AdGuard Home has your back.\nIn today\u0026rsquo;s digital landscape, robust security measures are paramount. Protecting each device shields your family from accidental clicks and malicious attacks, ensuring peace of mind and a secure online environment.\nWhy on the Cloud? While setting up AdGuard Home on your home network is great, installing it on a cloud server like Linode takes things up a notch. Here\u0026rsquo;s why:\nOn-the-Go Protection: Your devices stay protected from ads and trackers, no matter where you are, you can even share it with your family. Centralized Control: Manage and customize your ad-blocking settings from a single dashboard. Enhanced Privacy: Keep your browsing data away from prying eyes. Ready to embark on this ad-free adventure? Let\u0026rsquo;s get started!\nSetting Up The Environment Step 1: Create a Linode Cloud Account Why choose Linode? Through NetworkChuck\u0026rsquo;s referral link, you receive a generous $100 cloud credit - a fantastic start!\nSign Up: Navigate to Linode\u0026rsquo;s signup page and register. Access the Dashboard: Log in and select \u0026lsquo;Linodes\u0026rsquo; from the left-side menu. Create a Linode: Click \u0026lsquo;Create Linode,\u0026rsquo; choose your preferred region, and select an operating system (Debian 11 is a solid choice). Choose a Plan: The Shared 1GB Nanode instance is sufficient for AdGuard Home. Label and Secure: Assign a label to your Linode and set a strong root password. Deploy: Click \u0026lsquo;Create Linode\u0026rsquo; and wait for it to initialize. Once your Linode is up and running, access it via the LISH Console or SSH. (use root as localhost login)\nStep 2: Installing AdGuard Home on Linode Yes, we\u0026rsquo;re already into setting up at this point.\nLog In: Access your Linode using SSH or the LISH Console with your root credentials. Update the system: sudo apt update \u0026amp;\u0026amp; apt upgrade -y Go ahead and copy this command to Install Adguard Home: curl -s -S -L https://raw.githubusercontent.com/AdguardTeam/AdGuardHome/master/scripts/install.sh | sh -s -- -v AdGuard Home is installed and running. You can use CTRL+Shift+V to paste into the terminal.\nStep 3: Configure AdGuard Home Post-installation, you\u0026rsquo;ll see a list of IP addresses with port :3000. Access the Web Interface: Open your browser and navigate to the IP address followed by :3000. If you encounter a security warning, proceed by clicking \u0026ldquo;Continue to site.\u0026rdquo; Initial Setup: Click \u0026lsquo;Get Started\u0026rsquo; and follow the prompts. When uncertain, default settings are typically fine. Set Credentials: Set up the Username and Password. Step 4: Integrate AdGuard Home with Your Router After this, your AdGuard Home is running, but in order to use it on your devices you need to set up inside your home router for all your devices to be protected. For that, I can\u0026rsquo;t walk you through each and every router\u0026rsquo;s settings, but the steps are pretty similar.\nFind your router IP address, you should be able to find it on the back of your router (commonly 192.168.0.1 or 192.169.1.1) enter it into your browser. Login into your router using the credentials mentioned in the back of your router; the default is often admin for both username and password. I suggest you change your default password. Configure DNS Settings: Enable DHCP Server: Ensure your router\u0026rsquo;s DHCP server is active. Set DNS Addresses: Input your AdGuard Home server\u0026rsquo;s IP as the primary DNS (mine was 96.126.113.207). For secondary DNS, options like 1.1.1.1 (Cloudflare), 9.9.9.9 (Quad9), or 8.8.8.8 (Google) are reliable. Save and apply the changes. Fine-Tuning AdGuard Home If you\u0026rsquo;ve done everything till here you should be good, but for those who enjoy customizations, AdGuard Home offers a plethora of settings. Some of the customization I did are:\nSettings Go to Settings -\u0026gt; General Settings: You can enable Parental Control and Safe Search. You can also make your Statistics last longer than 24hrs which is default. Now on Settings -\u0026gt; DNS Settings By default, it uses DNS from quad9 which is pretty good but I suggest you add more. You can click on the list of known DNS providers, which you can choose from. I used: https://dns.quad9.net/dns-query https://dns.google/dns-query https://dns.cloudflare.com/dns-query Enable \u0026lsquo;Load Balancing\u0026rsquo; to distribute queries evenly. Scroll down to \u0026lsquo;DNS server configuration\u0026rsquo; and enable DNSSEC for enhanced security. Click on Save. Filters DNS blocklists Go to Filters -\u0026gt; DNS blocklists, here you can add a blocklist that people have created and use it to block even more things. By default, AdGuard uses the AdGuard DNS filter, and you can add more.\nClick on Add blocklist -\u0026gt; Choose from the list Don\u0026rsquo;t choose too many from the list cause it may slow your internet requests. These are the blocklists I added. And just like that you are blocking more and more things. DNS rewrites Go to Filters -\u0026gt; DNS rewrites, here you can add your own DNS entries, so I added AdGuard here.\nClick on Add DNS rewrite Type in domain adguardforme.local and your IP address for AdGuard Home. And save it. Now, when I want to go on the AdGuard Home dashboard I just type in adguardforme.local and I\u0026rsquo;m into AdGuard, I don\u0026rsquo;t have to remember the IP address.\nCustom filtering rules Go to Filters -\u0026gt; Custom filtering rules. For some reason when I use Facebook on mobile device stories and videos did not load up, so I added custom filtering rules.\n@@||graph.facebook.com^$important ","permalink":"http://localhost:1313/blog/adguard-home-on-cloud/","summary":"\u003ch1 id=\"whats-the-buzz-about-adguard-home\"\u003eWhat\u0026rsquo;s the buzz about AdGuard Home?\u003c/h1\u003e\n\u003cp\u003eImagine AdGuard Home as your personal internet guardian. This versatile tool blocks ads, trackers, and other online nuisances across all devices connected to your network. Whether you\u0026rsquo;re browsing on your phone, tablet, or computer, AdGuard Home has your back.\u003c/p\u003e\n\u003cp\u003eIn today\u0026rsquo;s digital landscape, robust security measures are paramount. Protecting each device shields your family from accidental clicks and malicious attacks, ensuring peace of mind and a secure online environment.\u003c/p\u003e","title":"Running Private Adguard Server on Cloud (Linode)"},{"content":"Intro In my video about How I cleared the AWS SAA Certification Exam, I shared my preparation strategy as well as tips to ace the exam. I also gave a glimpse of my revision notes that I prepared while taking the course and practice exams on Udemy. After that video was out, I got so many comments and DMs, requesting me to share my notes, but the problem was that I took these notes using a note-taking app called Obsidian which stores them in markdown format locally on my Mac. Once I\u0026rsquo;m done editing my notes, I push them to a GitHub repository to make sure I don\u0026rsquo;t lose them if my laptop breaks.\nSo, if you want to view my notes exactly like I do, you can clone my Obsidian Vault repository and download Obsidian to render it. But, this solution isn\u0026rsquo;t elegant as it would require you to download an additional software. So, I along with my college roommate, Sarthak Narayan, had been working over the past 2 weeks on the project, Obsidian Publish using GitHub Action, which would allow us to effortlessly publish our notes as a static website.\nIt is complete and I\u0026rsquo;ve used it to publish my notes at notes.arkalim.org. Working The GitHub Action spins up a Docker container which parses and converts Obsidian markdown notes into a special markdown format understood by MkDocs, an open-source static site generator. MkDocs is actually meant for preparing documentations but works well for notes too. After the markdown files have been converted, all the images in my notes are compressed to a fraction of their original size so that they can load quickly in your web browser. A static site is then built using MkDocs and then finally deployed on Netlify. All of this happens automatically using GitHub Actions. All I have to do is update my notes and push the changes to GitHub.\nFinal thoughts Having an automated way to publish your notes online with the community is a powerful way to share knowledge. This project has also made it exceedingly easy for me to refer my notes from anywhere, which is powerful when you work on a lot of systems.\nResources My Notes Obsidian Publish - GitHub Action Parser and Image Compressor MkDocs - Material Theme ","permalink":"http://localhost:1313/projects/obsidian-publish-github-action/","summary":"\u003ch2 id=\"intro\"\u003eIntro\u003c/h2\u003e\n\u003cp\u003eIn my video about \u003ca href=\"https://arkalim.org/blog/aws-saa-certification/\"\u003e\u003cstrong\u003eHow I cleared the AWS SAA Certification Exam\u003c/strong\u003e\u003c/a\u003e, I shared my preparation strategy as well as tips to ace the exam. I also gave a glimpse of my revision notes that I prepared while taking the course and practice exams on Udemy. After that video was out, I got so many comments and DMs, requesting me to share my notes, but the problem was that I took these notes using a note-taking app called Obsidian which stores them in markdown format locally on my Mac. Once I\u0026rsquo;m done editing my notes, I push them to a GitHub repository to make sure I don\u0026rsquo;t lose them if my laptop breaks.\u003c/p\u003e","title":"Obsidian Publish using GitHub Action"},{"content":"🔗 GitHub Description I like reading personal improvement and mindset change type books on Kindle e-reader. Some of these books are downloaded straight from the internet and not from the Kindle store. I take highlights during my reading which I wanted to sync to my Notion workspace. There was no existing app that could do this job, so I developed my own.\nKindle exports the highlights as a file named MyClippings.txt. The NodeJS application reads the MyClipping.txt file exported by Kindle, parses it using Regex, extracts all the highlights, book names, highlight time etc and creates a JSON. It then uses Notion API to sync these highlights to a database in my Notion workspace. The app maintains a cache (JSON) containing the number of highlights synced for each book. This allows the highlights to be synced incrementally, preventing re-syncing of old highlights.\nAfter the app was received well by the open-source community and other developers contributed to improve the app, I dockerized it to make shipping the app easier. Now, the users don’t have to install any dependency. They can just use the docker run command with the path to their clippings file along with their Notion API key and database ID. This would sync their highlights to their Notion database.\nAs a part of automation, I implemented auto build and deployment of containers on push to the master branch using GitHub Actions. If a developer raises a pull request and I merge it to the master branch, the GitHub workflow automatically builds the app and deploys it to GitHub packages repository.\n","permalink":"http://localhost:1313/projects/kindle-to-notion/","summary":"\u003ch3 id=\"-githubhttpsgithubcomarkalimkindle-to-notion\"\u003e🔗 \u003ca href=\"https://github.com/arkalim/kindle-to-notion\"\u003eGitHub\u003c/a\u003e\u003c/h3\u003e\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eI like reading personal improvement and mindset change type books on \u003cstrong\u003eKindle\u003c/strong\u003e e-reader. Some of these books are downloaded straight from the internet and not from the Kindle store. I take highlights during my reading which I wanted to sync to my Notion workspace. There was no existing app that could do this job, so I developed my own.\u003c/p\u003e\n\u003cp\u003eKindle exports the highlights as a file named \u003ccode\u003eMyClippings.txt\u003c/code\u003e. The \u003cstrong\u003eNodeJS\u003c/strong\u003e application reads the \u003ccode\u003eMyClipping.txt\u003c/code\u003e file exported by Kindle, parses it using Regex, extracts all the highlights, book names, highlight time etc and creates a JSON. It then uses \u003cstrong\u003eNotion API\u003c/strong\u003e to sync these highlights to a database in my Notion workspace. The app maintains a cache (JSON) containing the number of highlights synced for each book. This allows the highlights to be synced incrementally, preventing re-syncing of old highlights.\u003c/p\u003e","title":"Kindle to Notion"},{"content":"🔗 Colab Notebook Description In this project, I implemented the paper Show, Attend and Tell: Neural Image Caption Generation with Visual Attention. The neural network, a combination of CNN and LSTM, was trained on the MS COCO dataset and it learns to generate captions from images.\nAs the network generates the caption, word by word, the model’s gaze (attention) shifts across the image. This allows it to focus on those parts of the image which is more relevant for the next word to be generated. Furthermore, beam search is used during inference to enhance the prediction result. The network was trained in PyTorch on an Nvidia GTX 1060 graphics card for over 80 epochs.\n","permalink":"http://localhost:1313/projects/automated-image-captioning/","summary":"\u003ch3 id=\"-colab-notebookhttpscolabresearchgooglecomdrive1q553uslyw3ho6p1g46soedxos_vmhxfj\"\u003e🔗 \u003ca href=\"https://colab.research.google.com/drive/1Q553uslYW3Ho6P1G46SOEDxOS_VmHXfJ\"\u003eColab Notebook\u003c/a\u003e\u003c/h3\u003e\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eIn this project, I implemented the paper \u003cstrong\u003e\u003ca href=\"https://arxiv.org/abs/1502.03044\"\u003eShow, Attend and Tell: Neural Image Caption Generation with Visual Attention\u003c/a\u003e\u003c/strong\u003e. The neural network, a combination of \u003cstrong\u003eCNN\u003c/strong\u003e and \u003cstrong\u003eLSTM\u003c/strong\u003e, was trained on the \u003cstrong\u003eMS COCO\u003c/strong\u003e dataset and it learns to generate captions from images.\u003c/p\u003e\n\u003cp\u003eAs the network generates the caption, word by word, the model’s gaze (attention) shifts across the image. This allows it to focus on those parts of the image which is more relevant for the next word to be generated.\n\u003cimg loading=\"lazy\" src=\"/projects/automated-image-captioning/img1.jpg\" alt=\"Attention Mechanism\"  /\u003e\r\n\u003c/p\u003e","title":"Automated Image Captioning (Bachelor Thesis)"},{"content":"🔗 View App 🔗 GitHub Description A to-do list web application built using React that allows the user to add, remove and edit their todos. Todo lists are stored in the browser local storage. I built this app while learning React.\n","permalink":"http://localhost:1313/projects/todo-list-app/","summary":"\u003ch3 id=\"-view-apphttpsarkalim-todo-listnetlifyapp\"\u003e🔗 \u003ca href=\"https://arkalim-todo-list.netlify.app\"\u003eView App\u003c/a\u003e\u003c/h3\u003e\n\u003ch3 id=\"-githubhttpsgithubcomarkalimtodo-list-app\"\u003e🔗 \u003ca href=\"https://github.com/arkalim/todo-list-app\"\u003eGitHub\u003c/a\u003e\u003c/h3\u003e\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eA to-do list web application built using \u003cstrong\u003eReact\u003c/strong\u003e that allows the user to add, remove and edit their todos. Todo lists are stored in the browser local storage. I built this app while learning \u003cstrong\u003eReact\u003c/strong\u003e.\u003c/p\u003e","title":"Todo List App"},{"content":"🔗 Colab Notebook 🔗 Blog Post Description In this project, I trained a neural network to localize key points on faces. Resnet-18 was used as the model with some slight modifications to the input and output layer. The model was trained on the official DLib Dataset containing 6666 images along with corresponding 68-point landmarks for each face. Additionally, I wrote a custom data preprocessing pipeline in PyTorch to increase variance in the input images to help the model generalize better. The neural network was trained for 30 epochs before it reached the optima.\nDuring inference, OpenCV Harr Cascades are used to detect faces in the input images. Detected faces are then cropped, resized to (224, 224), and fed to our trained neural network to predict landmarks in them. The predicted landmarks in the cropped faces are then overlayed on top of the original image.\n","permalink":"http://localhost:1313/projects/face-landmarks-detection/","summary":"\u003ch3 id=\"-colab-notebookhttpscolabresearchgooglecomdrive1tow7w_wu4oltogzfz_0krpxmhdfr2gmb\"\u003e🔗 \u003ca href=\"https://colab.research.google.com/drive/1TOw7W_WU4oltoGZfZ_0krpxmhdFR2gmb\"\u003eColab Notebook\u003c/a\u003e\u003c/h3\u003e\n\u003ch3 id=\"-blog-postblogface-landmarks-detection\"\u003e🔗 \u003ca href=\"../../blog/face-landmarks-detection\"\u003eBlog Post\u003c/a\u003e\u003c/h3\u003e\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eIn this project, I trained a neural network to localize key points on faces. \u003cstrong\u003eResnet-18\u003c/strong\u003e was used as the model with some slight modifications to the input and output layer. The model was trained on the official \u003cstrong\u003eDLib Dataset\u003c/strong\u003e containing \u003cstrong\u003e6666 images\u003c/strong\u003e along with corresponding \u003cstrong\u003e68-point landmarks\u003c/strong\u003e for each face. Additionally, I wrote a custom data preprocessing pipeline in \u003cstrong\u003ePyTorch\u003c/strong\u003e to increase variance in the input images to help the model generalize better. The neural network was trained for 30 epochs before it reached the optima.\u003c/p\u003e","title":"Face Landmarks Detection using CNN"},{"content":"Description The aim of the project was to build goggles which could find where the user was looking (gaze), the category of object the user was looking at, and the duration of attention on that object. The goggles had 3 camera modules, one on each eye to track the pupil movement and the third one for mapping the gaze to the real world. Thresholding was used to detect the pupils and contours were used to find its centre. Various important parameters such as pupil velocity, acceleration, and fixation time were calculated for further statistical analysis. Single Shot Descriptor, with VGG16 as backbone, was used to detect the objects the user was gazing at. Additionally, a GUI was made using TkInter for ease of use.\n","permalink":"http://localhost:1313/projects/gaze-tracking-goggles/","summary":"\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eThe aim of the project was to build goggles which could find where the user was looking (gaze), the category of object the user was looking at, and the duration of attention on that object. The goggles had 3 camera modules, one on each eye to track the pupil movement and the third one for mapping the gaze to the real world. Thresholding was used to detect the pupils and contours were used to find its centre. Various important parameters such as pupil velocity, acceleration, and fixation time were calculated for further statistical analysis. \u003cstrong\u003eSingle Shot Descriptor\u003c/strong\u003e, with \u003cstrong\u003eVGG16\u003c/strong\u003e as backbone, was used to detect the objects the user was gazing at. Additionally, a GUI was made using \u003cstrong\u003eTkInter\u003c/strong\u003e for ease of use.\u003c/p\u003e","title":"Gaze-tracking Goggles"},{"content":"🔗 GitHub Description The aim of the project is to build an open-source quadcopter platform for research in the field of drone autonomy. Various deep learning and computer vision algorithms will be implemented on the drone including person tracking, gesture control using human pose estimation, optical flow stabilization, obstacle avoidance, and depth estimation using monocular vision. The drone uses a Pixhawk flight controller with Raspberry Pi as a companion computer. DJI Flame Wheel-450 is used for the quadcopter frame along with some custom mountings for adding additional components.\nRaspberry Pi runs a ROS node which communicates with another ROS node running on the host PC to transfer videos over Wi-Fi. To make the project open-source, easy to develop, and easily reproducible, the simulation environment setup has been dockerized using docker container. We are currently developing the algorithms and testing them in Gazebo Simulation.\n","permalink":"http://localhost:1313/projects/openquad/","summary":"\u003ch3 id=\"-githubhttpsgithubcomopenquad-rmiopenquad\"\u003e🔗 \u003ca href=\"https://github.com/OpenQuad-RMI/openquad\"\u003eGitHub\u003c/a\u003e\u003c/h3\u003e\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eThe aim of the project is to build an open-source quadcopter platform for research in the field of drone autonomy. Various deep learning and computer vision algorithms will be implemented on the drone including person tracking, gesture control using human pose estimation, optical flow stabilization, obstacle avoidance, and depth estimation using monocular vision. The drone uses a \u003cstrong\u003ePixhawk\u003c/strong\u003e flight controller with \u003cstrong\u003eRaspberry Pi\u003c/strong\u003e as a companion computer. \u003cstrong\u003eDJI Flame Wheel-450\u003c/strong\u003e is used for the quadcopter frame along with some custom mountings for adding additional components.\u003c/p\u003e","title":"OpenQuad"},{"content":" Presented in the 4th International and 19th National Conference on Machine and Mechanisms (iNaCoMM 2019)\nPublished in the Springer 2019\n🔗 Publication Description Natural disasters like earthquakes and landslides are sudden events that cause widespread destruction and major collateral damage including loss of life. Though disasters can never be prevented, their effects on mankind can surely be reduced. In this paper, we present the design and control of SRR (Search and Reconnaissance Robot), a robot capable of traversing on all terrains and locating survivors stuck under the debris. This will assist the rescue team to focus on recovering the victims, leaving the locating task for the Robots. The unique features of the SRR above existing ATVs are active-articulation, modularity, and assisted-autonomy. Active-articulation allows the SRR to climb objects much tall than itself. Modularity allows the SRR to detach into smaller modules to enter tight spaces where the whole body can’t fit. Assisted-autonomy allows the SRR to detect the presence of objects in front and climb autonomously over them.\n","permalink":"http://localhost:1313/projects/search-and-reconnaissance-robot/","summary":"\u003cblockquote\u003e\n\u003cp\u003ePresented in the 4th International and 19th National Conference on Machine and Mechanisms (\u003cstrong\u003eiNaCoMM 2019\u003c/strong\u003e)\u003c/p\u003e\u003c/blockquote\u003e\n\u003cblockquote\u003e\n\u003cp\u003ePublished in the \u003cstrong\u003eSpringer 2019\u003c/strong\u003e\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch3 id=\"-publicationhttpswwwresearchgatenetpublication343361428_search_and_reconnaissance_robot_for_disaster_management\"\u003e🔗 \u003ca href=\"https://www.researchgate.net/publication/343361428_Search_and_Reconnaissance_Robot_for_Disaster_Management\"\u003ePublication\u003c/a\u003e\u003c/h3\u003e\n\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eNatural disasters like earthquakes and landslides are sudden events that cause widespread destruction and major collateral damage including loss of life. Though disasters can never be prevented, their effects on mankind can surely be reduced. In this paper, we present the design and control of SRR (Search and Reconnaissance Robot), a robot capable of traversing on all terrains and locating survivors stuck under the debris. This will assist the rescue team to focus on recovering the victims, leaving the locating task for the Robots. The unique features of the SRR above existing ATVs are active-articulation, modularity, and assisted-autonomy. Active-articulation allows the SRR to climb objects much tall than itself. Modularity allows the SRR to detach into smaller modules to enter tight spaces where the whole body can’t fit. Assisted-autonomy allows the SRR to detect the presence of objects in front and climb autonomously over them.\u003c/p\u003e","title":"Search and Reconnaissance Robot"},{"content":"Description I worked on this project single-handedly during the summer break following my freshman year at NIT- Trichy. SEBART-Pro is a robot that follows a ball while balancing on two wheels. It can also recognize traffic signs and act accordingly. It has two stepper motors for precise position control and used an Arduino Nano as the microcontroller. The robot senses the tilt using an MPU-6050 (6-axis gyroscope and accelerometer) and converts the values from these sensors into angles using a Kalman Filter. It uses the PID control algorithm to balance on two wheels and a simple Convolutional Neural Network is used to recognize traffic signs.\n","permalink":"http://localhost:1313/projects/sebart-pro/","summary":"\u003ch2 id=\"description\"\u003eDescription\u003c/h2\u003e\n\u003cp\u003eI worked on this project single-handedly during the summer break following my freshman year at NIT- Trichy. \u003cstrong\u003eSEBART-Pro\u003c/strong\u003e is a robot that follows a ball while balancing on two wheels. It can also recognize traffic signs and act accordingly. It has two stepper motors for precise position control and used an \u003cstrong\u003eArduino Nano\u003c/strong\u003e as the microcontroller. The robot senses the tilt using an \u003cstrong\u003eMPU-6050 (6-axis gyroscope and accelerometer)\u003c/strong\u003e and converts the values from these sensors into angles using a \u003cstrong\u003eKalman Filter\u003c/strong\u003e. It uses the \u003cstrong\u003ePID control algorithm\u003c/strong\u003e to balance on two wheels and a simple \u003cstrong\u003eConvolutional Neural Network\u003c/strong\u003e is used to recognize traffic signs.\u003c/p\u003e","title":"SEBART-Pro"},{"content":"Description Trained and optimized ML-based systems to detect and remove defective products from the production line, maintaining high standards. Optimized production efficiency by effectively operating pharmaceutical production lines, consistently meeting and exceeding established production schedules following SOP’s and GMPs. Identified and resolved mechanical issues promptly to maintain production efficiency. Streamlined operations by performing accurate line setups, clearances, and changeovers, minimizing downtime between batches. Supported operational excellence by assisting machine operators in setup and operation, contributing to seamless and efficient production runs. ","permalink":"http://localhost:1313/experience/abbvie/","summary":"\u003ch3 id=\"description\"\u003eDescription\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eTrained and optimized ML-based systems to detect and remove defective products from the production line, maintaining high standards.\u003c/li\u003e\n\u003cli\u003eOptimized production efficiency by effectively operating pharmaceutical production lines, consistently meeting and exceeding established production schedules following SOP’s and GMPs.\u003c/li\u003e\n\u003cli\u003eIdentified and resolved mechanical issues promptly to maintain production efficiency.\u003c/li\u003e\n\u003cli\u003eStreamlined operations by performing accurate line setups, clearances, and changeovers, minimizing downtime between batches.\u003c/li\u003e\n\u003cli\u003eSupported operational excellence by assisting machine operators in setup and operation, contributing to seamless and efficient production runs.\u003c/li\u003e\n\u003c/ul\u003e","title":"Operator III"},{"content":"Description Led comprehensive testing procedures for mobile devices and smartwatches, improving testing efficiency by 150%. Collaborated with engineers regarding bugs and out-of-date software updates, minimizing downtime. Mentored and trained new employees, improving team productivity by 100%. ","permalink":"http://localhost:1313/experience/fedex/","summary":"\u003ch3 id=\"description\"\u003eDescription\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eLed comprehensive testing procedures for mobile devices and smartwatches, improving testing efficiency by 150%.\u003c/li\u003e\n\u003cli\u003eCollaborated with engineers regarding bugs and out-of-date software updates, minimizing downtime.\u003c/li\u003e\n\u003cli\u003eMentored and trained new employees, improving team productivity by 100%.\u003c/li\u003e\n\u003c/ul\u003e","title":"Associate"},{"content":"Description Deployed and assisted in managing a helpdesk system on the Ubuntu Server, increasing resolution efficiency for Saas-based customerservice. (UVdesk, Zendesk) Provided technical support via in-person, email, phone, chat, and ticketing systems ensuring a high CSAT score of 85%. (Asana, Slack) Implemented automation to streamline and optimize repetitive tasks, improving efficiency and manual workload. (OK Goldy) Diagnosed hardware, software, and network issues, resolving 90% of reported problems within SLAs. Created and maintained helpdesk documentation, reducing repetitive inquiries and improving self-service support. Monitored and maintained network infrastructure using Nagios, cnMaestro, MRTG, and GWN Cloud. ","permalink":"http://localhost:1313/experience/islingtoncollege/","summary":"\u003ch3 id=\"description\"\u003eDescription\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eDeployed and assisted in managing a helpdesk system on the Ubuntu Server, increasing resolution efficiency for Saas-based customerservice. (UVdesk, Zendesk)\u003c/li\u003e\n\u003cli\u003eProvided technical support via in-person, email, phone, chat, and ticketing systems ensuring a high CSAT score of 85%. (Asana, Slack)\u003c/li\u003e\n\u003cli\u003eImplemented automation to streamline and optimize repetitive tasks, improving efficiency and manual workload. (OK Goldy)\u003c/li\u003e\n\u003cli\u003eDiagnosed hardware, software, and network issues, resolving 90% of reported problems within SLAs.\u003c/li\u003e\n\u003cli\u003eCreated and maintained helpdesk documentation, reducing repetitive inquiries and improving self-service support.\u003c/li\u003e\n\u003cli\u003eMonitored and maintained network infrastructure using Nagios, cnMaestro, MRTG, and GWN Cloud.\u003c/li\u003e\n\u003c/ul\u003e","title":"IT Support Specialist"},{"content":"Description Assisted in developing an attendance management system for the company using HTML, CSS, JavaScript, jQuery, and .NET Core. Gained experience in database management and API integration (MySQL, Web API). ","permalink":"http://localhost:1313/experience/blackbox/","summary":"\u003ch3 id=\"description\"\u003eDescription\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAssisted in developing an attendance management system for the company using HTML, CSS, JavaScript, jQuery, and .NET Core.\u003c/li\u003e\n\u003cli\u003eGained experience in database management and API integration (MySQL, Web API).\u003c/li\u003e\n\u003c/ul\u003e","title":"Web Development Intern"},{"content":"Description Assisted in debugging HTML, CSS, jQuery, and Javascript improving responsiveness. Integrated logos into the websites using Photoshop, HTML, and CSS. ","permalink":"http://localhost:1313/experience/radiantinfotech/","summary":"\u003ch3 id=\"description\"\u003eDescription\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eAssisted in debugging HTML, CSS, jQuery, and Javascript improving responsiveness.\u003c/li\u003e\n\u003cli\u003eIntegrated logos into the websites using Photoshop, HTML, and CSS.\u003c/li\u003e\n\u003c/ul\u003e","title":"Web Development Intern"}]